.\" -*- nroff -*-
.\" Copyright 2002-2003 by Szabolcs Szakacsits  All Rights Reserved.
.\"
.TH NTFSRESIZE 8 "Oct 2003" "ntfsprogs @VERSION@"
.SH NAME
ntfsresize \- resize an NTFS filesystem
.SH SYNOPSIS
.B ntfsresize
[\fB\-fhin\fR]
[\fB\-s \fIsize\fR[\fBk\fR|\fBM\fR|\fBG\fR]]
.I device
.SH DESCRIPTION
The
.B ntfsresize
program non-destructively resizes Windows NT4, 2000, XP or Windows Server 2003
NTFS filesystems.  At present it can be used to enlarge any or shrink a
defragmented NTFS filesystem located on an unmounted
.I device
(usually a disk partition). The new volume will have
.I size
bytes.
The
.I size
parameter may have one of the optional modifiers
\fBk\fR, \fBM\fR, \fBG\fR, which means the
.I size
parameter is given in kilo-, mega- or gigabytes respectively.
.B ntfsresize
conforms to the SI, ATA, IEEE standards and the disk manufacturers
by using k=10^3, M=10^6 and G=10^9.

If both 
.B -i
and
.B -s
are omitted then the 
NTFS filesystem will be enlarged to the device size.

If the options
.B -i 
and 
.B -s 
are used together then list inodes (files) using space over 
.I size\fR. At present
.B ntfsresize 
can not relocate the files listed to the beginning 
of the partition thus it refuses to resize at
.I size
if there is any.
To convert the inodes to meaningful file names, you must mount 
the partition with the
.I show_sys_files
mount option and run for instance
.RS
.sp
.B find /mount/point \-inum <inode1> \-o \-inum <inode2> ...
.sp
.RE
Before a real resize operation, always make a read-only 
test run using the 
.B -n 
option.
.PP
The
.B ntfsresize
program doesn't manipulate the size of partitions.
To do that you have to use a disk partitioning tool, for example
.BR fdisk (8).
.PP
If you wish to enlarge an NTFS filesystem  then
first you must enlarge the size of the
underlying partition. This can be done using 
.BR fdisk (8)
by deleting the partition and recreating it with a larger size.
Then  you may use
.B ntfsresize
to enlarge the size of the filesystem.
.PP
If you wish to shrink an NTFS partition, first use
.B ntfsresize
to shrink the size of the filesystem. Then you may use
.BR fdisk (8)
to shrink the size of the partition by deleting the
partition and recreating it with the smaller size.
.PP
.B IMPORTANT!
When recreating the partition with
.BR fdisk (8)
make sure you create it with the same starting
disk cylinder and partition type
as before. 
If you enlarge a partition make sure it will not overlap with 
an other existing partition!
If you shrink a partition, do not make 
it smaller than the new size of the NTFS filesystem! 
Otherwise you may lose your entire filesystem.
Also make sure you set the bootable flag for the partition if it
existed before. Failing to do so you might not be able to boot your
computer from the disk!
.PP
Note,
.B ntfsresize
schedules an NTFS consistency check
when you will boot Windows. Windows may force a reboot after
the successful consistency check.

.SH OPTIONS
.TP
.B -f
Forces ntfsresize to proceed with the filesystem resize operation, overriding
some safety checks which
.B ntfsresize
normally enforces. You can use this
parameter multiply times if you want to overcome every single safety checks.
.TP
.B -h
Display help and exit.
.TP
.B -i
Using this option you can calculate the smallest shrunken volume size supported.
This option will not make any changes to the filesystem. 
You can use this option with 
.B -s\fR. See the meaning of this case above.
.TP
.B -n
Use this option to make a test run before doing the real resize operation.
Volume will be opened read-only and
.B ntfsresize
displays what it would do if it were to resize the filesystem.
.TP
.B -s \fIsize\fR[\fBk\fR|\fBM\fR|\fBG\fR]
Resize volume to \fIsize\fR[\fBk\fR|\fBM\fR|\fBG\fR] bytes.
The optional modifiers \fBk\fR, \fBM\fR, \fBG\fR mean the
.I size
parameter is given in kilo-, mega- or gigabytes respectively.
Conforming to standards, k=10^3, M=10^6 and G=10^9. You can also use this option
with
.B -i\fR. See the meaning of this case above.
.SH EXIT CODES
The exit code is 0 on success, non-zero otherwise. 
.SH BUGS
No bugs are known or has been reported so far in the current version.
If you find otherwise, please report it to <linux-ntfs-dev@lists.sourceforge.net>
(no subscription needed). It's also strongly advised you
.B MAKE SURE YOU HAVE A BACKUP
of your important data in case of an unexpected failure.
.PP
Future work is planned to include support for resizing fragmented NTFS volumes.
Please note, Windows 2000, XP and Windows Server 2003 have built in NTFS 
defragmenter. 
.SH AUTHOR
.B ntfsresize
has been written by
Szabolcs Szakacsits <szaka@sienet.hu>.
.SH ACKNOWLEDGEMENT
Many thanks to Anton Altaparmakov and Richard Russon (FlatCap)
for libntfs, excellent documentation, comments, testing and fixes,
moreover to Theodore Ts'o whose
.BR resize2fs (8)
man page formed the basis of this page.
.SH AVAILABILITY
.B ntfsresize
is part of the linux-ntfs package and is available from
http://linux-ntfs.sourceforge.net/ as source and pre-compiled binary.
.B ntfsresize
related news, example of usage and FAQ (frequently asked questions)
is maintained at 
http://mlf.linux.rulez.org/mlf/ezaz/ntfsresize.html
.SH SEE ALSO
.BR fdisk (8),
.BR cfdisk (8),
.BR sfdisk (8),
.BR parted (8),
.BR mkntfs (8),
.BR ntfsclone (8),
.BR ntfsprogs (8)

